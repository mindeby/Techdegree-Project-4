{"version":3,"sources":["scss/components/_typography.scss","scss/utilities/_mixins.scss","scss/utilities/_placeholders.scss","scss/utilities/_global-variables.scss","scss/base/_base.scss","scss/components/_grid.scss","scss/components/_buttons.scss","scss/components/_forms.scss","scss/components/_images.scss","scss/components/_navigation.scss"],"names":[],"mappings":"AACQ;AAEA;ACDR;EACE;IACE;;;ACHJ;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;AAGF;EACE,kBCRM;EDSN;EACA;EACA;;;AEnBF;EACE;;;AAIF;EACE;;;ACQA;EACE;EACA;EACA;;AAGA;EANF;IAOI;;;AAaA;EAKE;EACA;;AAGA;EATF;IAYI;IAGA;;;AAfJ;EAKE;EACA;;AAGA;EATF;IAYI;IAGA;;;AAfJ;EAKE;EACA;;AAGA;EATF;IAYI;IAGA;;;AAfJ;EAKE;EACA;;AAGA;EATF;IAYI;IAGA;;;AAfJ;EAKE;EACA;;AAGA;EATF;IAYI;IAGA;;;AAfJ;EAKE;EACA;;AAGA;EATF;IAYI;IAGA;;;AAfJ;EAKE;EACA;;AAGA;EATF;IAYI;IAGA;;;AAfJ;EAKE;EACA;;AAGA;EATF;IAYI;IAGA;;;AAfJ;EAKE;EACA;;AAGA;EATF;IAYI;IAGA;;;AAfJ;EAKE;EACA;;AAGA;EATF;IAYI;IAGA;;;AAfJ;EAKE;EACA;;AAGA;EATF;IAYI;IAGA;;;AAfJ;EAKE;EACA;;AAGA;EATF;IAYI;IAGA;;;;AASR;EAEE,kBFzCU;;AE4CZ;EAEE,kBFtDa;;AEyDf;EAEE,kBFzDW;;AE6Db;EAEE,kBF1DU;;AE4DZ;EACE,kBFjES;;AEqEX;EAEE,kBFtEW;;AEyEb;EAEE,kBFhFW;;;AE+FX;EAHF;IAMI;;;;AC5GJ;EACE,kBHUa;;AGPf;EACE,kBHQW;;AGLb;EACE,kBHKS;;AGFX;EACE,kBHEW;;AGCb;EACE,kBHDQ;;;AIlBZ;EACE;EACA;EACA;EACA;EACA;EACA;EACA;;AAEA;EACE;;;AAIJ;EACE,kBJLM;;;AKHN;EAEE;EACA;EACA;EACA;;ACZJ;EACI;EAEA;EACA,ONmBS;;AMlBX;EACE;;AACE;EACA,kBNIS;EMHT,ONCE;;;AHLR;EACE,OGiBW;EHhBX;EACA;EACA;EAEA;;;AAIF;EACE;EACA;EACA;EACA,aGZoB;EHapB,OGRa;EHSb;;;AAIF;EACE;EACA,OGJW;EHKX;EACA;EACA;EACA;;;AAGF;EACE;EACA;EACA;EACA;EACA;EACA,OGjBW;EHkBX;EACA;EACA;EACA;;;AAGF;EACE;EACA,OGpCe;EHqCf","file":"styles.b61e60ae.css","sourceRoot":"..","sourcesContent":["\n@import url('https://fonts.googleapis.com/css?family=Open+Sans:400,700');\n\n@import url('https://fonts.googleapis.com/css?family=Montserrat:400,700|Open+Sans:400,700');\n\n.container {\n  color: $color-text;\n  font-size: 1.2rem;\n  line-height: 1.5;\n  font-family: $font-stack-primary,\n               $font-stack-secondary;\n  text-align: left;\n\n}\n\n.headline--primary {\n  font-size: 2rem;\n  text-align: left;\n  text-transform: none;\n  font-family: $font-stack-secondary;\n  color: $color-primary;\n  margin-left: 1rem;\n}\n\n\n.headline--secondary {\n  text-align: left;\n  color: $color-text;\n  font-weight: 400;\n  text-transform: none;\n  line-height: 1.8em;\n  margin-left: 10px;\n}\n\n.blockquote {\n  border-left: solid $color-primary 8px;\n  border-radius: 5px;\n  padding-left: 20px;\n  text-align: left;\n  line-height: 2.2rem;\n  color: $color-text;\n  font-style: italic;\n  font-size: 1.8rem;\n  text-transform: none;\n  font-weight: 200;\n}\n\n.link {\n  text-decoration: none;\n  color: $color-secondary;\n  font-weight: 600;\n}\n","// create mixins for media queries & flexbox settings\n\n@media(min-width: map-get($breakpoints, 'l')) {\n  .container {\n    flex:1;\n  }\n\n}\n\n//center containers\n@mixin center {\n  width: 90%;\n  max-width: $max-width;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n//make objects round\n\n@mixin roundy($dim, $brdr: null) {\n  width: $dim;\n  height: $dim;\n  border: $brdr;\n  border-radius: 50%;\n}\n\n// media queries\n\n@mixin mq($break) {\n  $value: map-get($breakpoints, $break);\n  $l: map-get($breakpoints, 'l');\n\n  @if $value < $l {\n    @media (max-width: $value) {\n      @content;\n    }\n  }\n  @else {\n    @media (min-width: $value) {\n      @content;\n    }\n  }\n}\n","//create placeholders for at least Links, images and nav items\n%btn {\n  color:white;\n  display:block;\n  margin:auto;\n  width: 100%;\n  padding-top: 15px;\n  padding-bottom: 15px;\n  text-transform:uppercase;\n  font-weight: 700;\n  font-size: 14px;\n  margin-bottom: 15px;\n  border-radius: 5px;\n  border: none;\n  text-align: center;\n}\n\n%img {\n  background-color: $white;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n//%grid_col{\n\n//}\n","// create variables for your repeated values\n//at minimum for fonts, breakpoints and colors\n\n\n// font stack\n\n$font-stack-primary:'Open Sans', sans-serif;\n$font-stack-secondary:'Montserrat', sans-serif;\n\n//colors\n$white: white;\n\n$color-primary:#58E1C1; //green circle\n$color-secondary:#51DDFC; //blue circle and default button\n\n$color-success:#63CC82; //green\n$color-error:#E4757A; //red\n$color-warning:#FD7856; //orange\n$color-info:#927BC1; //dark purple\n\n$color-theme1:#3FABCA; //darker blue\n$color-theme2:#DEB2EE; //light purple\n\n$color-text: #797979;\n\n//breakpoints & media queries\n\n$breakpoints: (\n  's': 480px,\n  'l': 1400px,\n);\n\n// widths\n\n$max-width: 900px;\n$gutter: 10px;\n","// only apply styles to *, ul, p, a\n\n* {\n  box-sizing: border-box;\n}\n\n\np {\n  margin-bottom: 1.25em;\n}\n","// **********************************************\n// _grid.scss\n// styles related to the grid system and\n// main container.\n\n\n// major grid styles have been added here for you\n// but additional styling may be needed\n// **********************************************\n\n\n\n// grid base class\n.grid {\n\n  // .grid__row\n  &__row {\n    padding: 1em 10px;\n    display: flex;\n    flex-direction: column;\n\n    // NOTE: replace with media query mixin if aiming for exceeds\n    @media (min-width: 768px) {\n      flex-direction: row;\n    }\n  }\n\n  // .grid__col\n  &__col {\n\n    // create grid columns dynamically\n    // loop through each column size\n    @for $i from 1 through 12 {\n\n      // concatenate CSS selector, ie when $i = 1,\n      // selector would be .grid__col--1\n      &--#{$i} {\n\n        // base styles applied to all grid columns\n        // NOTE: could be converted to a placeholder, along with margin\n        // from the  media query\n        margin-top: 10px;\n        flex-basis: 100%;\n\n        // NOTE: replace with media query mixin if aiming for exceeds\n        @media (min-width: 768px) {\n\n          // base stlyes applied to all grid columns\n          margin-top: 0;\n\n          // make column width a percentage of the column number / total columns\n          flex-basis: #{$i / 12 * 100 + \"%\"} ;\n        }\n      }\n    }\n  }\n}\n\n\n.grid__col {\n  &--3{\n    @extend %btn;\n    background-color: $color-theme2;\n\n  }\n  &--4{\n    @extend %btn;\n    background-color: $color-secondary;\n\n  }\n  &--5{\n    @extend %btn;\n    background-color: $color-success;\n\n  }\n\n  &--6{\n    @extend %btn;\n    background-color: $color-theme1;\n  }\n  &--7{\n    background-color: $color-error;\n    @extend %btn;\n\n  }\n  &--8{\n    @extend %btn;\n    background-color: $color-warning;\n\n  }\n  &--12{\n    @extend %btn;\n    background-color: $color-primary;\n\n  }\n\n}\n\n\n\n\n// targets all elements with classes that begin with grid__col\n[class^=grid__col] {\n  // grid__col + grid__col, targets two sibling columns\n  & + & {\n\n    // NOTE: replace with media query mixin if aiming for exceeds\n    @media (min-width: 768px) {\n\n      // add grid gutter\n      margin-left: 10px;\n    }\n  }\n}\n","\n.btn {\n  &--default{\n    background-color: $color-secondary;\n    @extend %btn;\n  }\n  &--success{\n    background-color:$color-success;\n    @extend %btn;\n  }\n  &--error{\n    background-color: $color-error;\n    @extend %btn;\n  }\n  &--warning{\n    background-color: $color-warning;\n    @extend %btn;\n  }\n  &--info{\n    background-color: $color-info;\n    @extend %btn;\n  }\n\n}\n",".form__input {\n  font-size: 13px;\n  font-weight: 500;\n  border: none;\n  border-bottom: $color-primary 5px solid;\n  min-width: 50%;\n  width: 92%;\n  padding: 10px;\n\n  &:last-of-type {\n    margin-bottom: 24px;\n  }\n}\n\n.form {\n  background-color: $white;\n}\n","\n\n\n.img {\n  &--logo {\n    @extend %img;\n  }\n  &--frame {\n    @extend %img;\n    width: 100%;\n    margin: auto;\n    padding: 12px;\n    border: #cdcdcd 1px solid;\n  }\n  &--avatar {\n    @extend %img;\n  }\n}\n",".nav {\n    font-weight: 500;\n    @extend %btn;\n    text-transform: none;\n    color: $color-text;\n  &__item {\n    list-style-type: none;\n      &:hover{\n      background-color: $color-primary;\n      color: $white;\n      }\n  }\n}\n"]}